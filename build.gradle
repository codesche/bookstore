plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'
version = '0.0.1-SNAPSHOT'
description = 'bookmanager'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Lombok - 코드 간소화를 위한 라이브러리
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Database Drivers
    // H2 - 테스트용 인메모리 데이터베이스
    runtimeOnly 'com.h2database:h2'

    // MySQL - 운영 환경 데이터베이스
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Mockito - Mock 객체 생성을 위한 라이브러리
    testImplementation 'org.mockito:mockito-core:5.8.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.8.0'

    // TestContainers - 실제 데이터베이스 컨테이너를 활용한 통합 테스트
    testImplementation 'org.testcontainers:testcontainers:1.19.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
    testImplementation 'org.testcontainers:mysql:1.19.3'

    // AssertJ - 테스트 검증을 위한 풍부한 API 제공
    testImplementation 'org.assertj:assertj-core:3.24.2'

    // RestAssured - REST API 테스트를 위한 라이브러리
    testImplementation 'io.rest-assured:rest-assured:5.3.2'
}

tasks.named('test') {
    useJUnitPlatform()

    // 테스트 실행 시 로깅 설정
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}
